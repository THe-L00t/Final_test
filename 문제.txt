상속과 다형성 실습

1. 새 프로젝트를 만들고 오른쪽 위 솔루션 탐색기와 같이 헤더 파일과 소스 파일을 추가하자.

2. 클래스 상속 계층도는 왼쪽 위 그림과 같다. 실행하는데 필요한 파일은 다음과 같다. 
Point.h + Point.cpp					(2차원 점)
+ Shape.h							(Base class)
+ Circle.h + Circle.cpp				(원)
+ Rectangle.h + Rectangle.cpp		(사각형)
+ Triangle.h + Triangle.cpp			(삼각형)
+ ShapeManager.h + ShapeManager.cpp (도형 관리 클래스)
+ 다형성구현.cpp					(main()이 있는 파일)

3. 코드를 모두 입력한 후 프로그램이 문제없이 실행되는지 확인하자. 
실행되지 않는다면 오류 메시지를 살펴보고 문제를 해결해 보자.

- 이 프로젝트를 실행하면 다음과 같이 출력될 것이다. 



4. 더 많은 새 도형을 추가해 보며 프로그램의 동작을 이해해 보자.
다형성이 어떻게 구현되고 있는지 확인하자. 

- 새 도형을 추가하고 전체 도형을 출력하여 프로그램의 동작을 살펴보라.

5. 각 객체가 제대로 생성되고 소멸되는지 관찰해 보자.
잘못한 곳이 있다면 소스를 고쳐 한 byte의 메모리도 놓치지 않도록 하라. 

- 프로그램 종료 시 메모리를 제대로 반환하고 있는지 확인하라.

6. 프로그램이 메뉴에 따라 실행될 수 있도록 고쳐보자. 
			Menu(예)
		- 원하는 도형 추가
			- 삼각형 
			- 사각형
			- 원
		- 전체 도형을 그리기
		- 프로그램 끝내기

	- 원하는 도형을 추가하려면 어느 부분에 무엇을 코딩해야 하는가 생각해보자

7. 메뉴에 항목을 추가하여 사용자가 선택한 도형을 제거할 수 있게 하자. 

- 관리하는 도형 중 원하는 번호를 제거(몇 번째 도형을 제거할까요?)
- 선택한 클래스의 모든 도형을 제거(어떤 도형을 제거할까요?)
- 도형을 제거하기 전과 후의 메모리를 그림으로 그려 알아 보자.

8. 도형관리자가 관리할 수 있는 도형의 갯수가 꽉 찼다고 가정하자. 
이런 경우에도 새로운 도형을 추가할 수 있도록 프로그램을 고쳐보자.

- 메모리의 내용을 생각하며 할 일의 순서를 적어보라. 

9. 도형관리자가 관리하는 도형을 파일로 저장하고 읽어 오는 메뉴를 추가해보자. 

- 파일의 이름을 입력받아 만든 도형을 읽고 써보라. 

- 파일에서 저장하기
- 파일 에서 읽어오기

10. 프로그램에 새로운 종류의 도형인 Line을 추가해 보자

- 필요한 파일(Line.h, Line.cpp)을 프로젝트에 추가하라.
- class Line은 시작점과 끝점을 멤버로 갖는다. 

11. Line이 잘 추가 되었는가?
전체 파일 중에서 Line이 추가됨에 따라 고쳐야 했던 파일은 어떤 것이었나?

- 수정할 필요가 없는 파일이 있었는가?
- 수정할 부분이 있었다면 어느 파일의 어디였는가를 적어보라.
- 이 과정에서 어떤 점을 알 수 있었는가?

12. 마지막으로 이 프로그램의 문제점과 감상 등을 정리해보자. 